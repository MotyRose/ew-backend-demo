# Docker Compose configuration for self-hosted PostgreSQL
# Use this for local development or self-hosted production PostgreSQL

version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: fireblocks-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-fireblocks_push_notifications}
      POSTGRES_USER: ${POSTGRES_USER:-fireblocks_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fireblocks_password}
      POSTGRES_ROOT_PASSWORD: ${POSTGRES_ROOT_PASSWORD:-your_secure_password_here}
      # Additional PostgreSQL configuration
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-config:/etc/postgresql/conf.d
      # Optional: Add initialization scripts
      - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
      - fireblocks_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-fireblocks_user} -d ${POSTGRES_DB:-fireblocks_push_notifications}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    command: >
      postgres
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: fireblocks-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@fireblocks.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin_password}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin-config:/pgadmin4/servers.json
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fireblocks_network

  # Optional: Redis for caching (useful for production)
  redis:
    image: redis:7-alpine
    container_name: fireblocks-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fireblocks_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:

networks:
  fireblocks_network:
    driver: bridge